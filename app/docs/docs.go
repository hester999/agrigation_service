// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/subscriptions": {
            "get": {
                "description": "Возвращает список всех подписок с пагинацией",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscribtions"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Ограничение количества результатов",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Некорректные limit или offset",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrDTO"
                        }
                    },
                    "404": {
                        "description": "Подписки не найдены",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrDTOArr"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка",
                        "schema": {
                            "$ref": "#/definitions/subscription.ErrDTO"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает подписку пользователю с начальной датой и длительностью",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscribtions"
                ],
                "parameters": [
                    {
                        "description": "Параметры подписки",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrDTO400"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrDTO500"
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions/{id}": {
            "get": {
                "description": "Возвращает подписку по её идентификатору",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscribtions"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID подписки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ServiceDTO"
                        }
                    },
                    "400": {
                        "description": "ID не передан",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrDTO400"
                        }
                    },
                    "404": {
                        "description": "Подписка не найдена",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrDTO404"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrDTO500"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет подписку по ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscribtions"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID подписки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Подписка успешно удалена"
                    },
                    "404": {
                        "description": "Подписка не найдена",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrDTO404"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrDTO500"
                        }
                    }
                }
            }
        },
        "/subscriptions/total/{id}": {
            "post": {
                "description": "Возвращает общую сумму подписок по пользователю и необязательное название услуги в указанном диапазоне дат",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscribtions"
                ],
                "parameters": [
                    {
                        "description": "Total price request",
                        "name": "totalPriceRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TotalRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponseTotalDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrDTO400"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrDTO404"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrDTO500"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}": {
            "put": {
                "description": "Полностью заменяет подписку по ID. Все поля обязательны для передачи.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscribtions"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID услуги",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Полные данные новой подписки",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrDTO400"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrDTO500"
                        }
                    }
                }
            },
            "patch": {
                "description": "Позволяет обновить один или несколько параметров подписки (название, цену, дату начала, длительность).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscribtions"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID услуги",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновляемые поля",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrDTO400"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrDTO404"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrDTO500"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateRequest": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer",
                    "example": 6
                },
                "price": {
                    "type": "integer",
                    "example": 1499
                },
                "service_name": {
                    "type": "string",
                    "example": "Yandex_plus"
                },
                "start_date": {
                    "type": "string",
                    "example": "2025-07"
                },
                "user_id": {
                    "type": "string",
                    "example": "81f4b2ae-4af4-4e15-8c85-7a324b6f0c58"
                }
            }
        },
        "dto.CreateResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-07-22T17:36:55.517136Z"
                },
                "end_date": {
                    "type": "string",
                    "example": "2026-01-01T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "8cd063d1-1f1b-4199-a3fa-f9aab8983166"
                },
                "price": {
                    "type": "integer",
                    "example": 1499
                },
                "service_name": {
                    "type": "string",
                    "example": "Yandex_plus"
                },
                "start_date": {
                    "type": "string",
                    "example": "2025-07-01T00:00:00Z"
                },
                "user_id": {
                    "type": "string",
                    "example": "81f4b2ae-4af4-4e15-8c85-7a324b6f0c58"
                }
            }
        },
        "dto.ErrDTO400": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "Bad Request"
                }
            }
        },
        "dto.ErrDTO404": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "message": {
                    "type": "string",
                    "example": "Not Found"
                }
            }
        },
        "dto.ErrDTO500": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "message": {
                    "type": "string",
                    "example": "internal server error"
                }
            }
        },
        "dto.ResponseDTO": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ServiceDTO"
                    }
                }
            }
        },
        "dto.ResponseTotalDTO": {
            "type": "object",
            "properties": {
                "total_price": {
                    "type": "integer",
                    "example": 1000
                }
            }
        },
        "dto.ServiceDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-07-20T10:00:00Z"
                },
                "end_date": {
                    "type": "string",
                    "example": "2025-10-25T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "a1b2c3d4"
                },
                "price": {
                    "type": "integer",
                    "example": 999
                },
                "service_name": {
                    "type": "string",
                    "example": "Yandex_plus"
                },
                "start_date": {
                    "type": "string",
                    "example": "2025-07-25T00:00:00Z"
                },
                "user_id": {
                    "type": "string",
                    "example": "user-123"
                }
            }
        },
        "dto.TotalRequestDTO": {
            "type": "object",
            "properties": {
                "from": {
                    "description": "Начальная дата диапазона (в формате YYYY-MM-DD)",
                    "type": "string",
                    "example": "2025-06-01"
                },
                "id": {
                    "description": "Идентификатор пользователя",
                    "type": "string",
                    "example": "8d633c4c-ef75-475a-915a-ec5dd783dce9"
                },
                "service_name": {
                    "description": "Название услуги",
                    "type": "string",
                    "example": "Yandex_plus"
                },
                "to": {
                    "description": "Конечная дата диапазона (в формате YYYY-MM-DD)",
                    "type": "string",
                    "example": "2025-07-31"
                }
            }
        },
        "dto.UpdateDTO": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer",
                    "example": 6
                },
                "price": {
                    "type": "integer",
                    "example": 599
                },
                "service_name": {
                    "type": "string",
                    "example": "YouTube Premium"
                },
                "start_date": {
                    "type": "string",
                    "example": "2025-08-01"
                }
            }
        },
        "dto.UpdateResponseDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-07-23T15:04:05Z"
                },
                "end_date": {
                    "type": "string",
                    "example": "2026-02-01T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "price": {
                    "type": "integer",
                    "example": 599
                },
                "service_name": {
                    "type": "string",
                    "example": "YouTube Premium"
                },
                "start_date": {
                    "type": "string",
                    "example": "2025-08-01T00:00:00Z"
                },
                "user_id": {
                    "type": "string",
                    "example": "user_001"
                }
            }
        },
        "subscription.ErrDTO": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "subscription.ErrDTOArr": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Aggregation Service API",
	Description:      "Сервис агрегации данных",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
