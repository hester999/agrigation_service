definitions:
  dto.CreateRequest:
    properties:
      duration:
        example: 6
        type: integer
      price:
        example: 1499
        type: integer
      service_name:
        example: Yandex_plus
        type: string
      start_date:
        example: 2025-07
        type: string
      user_id:
        example: 81f4b2ae-4af4-4e15-8c85-7a324b6f0c58
        type: string
    type: object
  dto.CreateResponse:
    properties:
      created_at:
        example: "2025-07-22T17:36:55.517136Z"
        type: string
      end_date:
        example: "2026-01-01T00:00:00Z"
        type: string
      id:
        example: 8cd063d1-1f1b-4199-a3fa-f9aab8983166
        type: string
      price:
        example: 1499
        type: integer
      service_name:
        example: Yandex_plus
        type: string
      start_date:
        example: "2025-07-01T00:00:00Z"
        type: string
      user_id:
        example: 81f4b2ae-4af4-4e15-8c85-7a324b6f0c58
        type: string
    type: object
  dto.ErrDTO400:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: Bad Request
        type: string
    type: object
  dto.ErrDTO404:
    properties:
      code:
        example: 404
        type: integer
      message:
        example: Not Found
        type: string
    type: object
  dto.ErrDTO500:
    properties:
      code:
        example: 500
        type: integer
      message:
        example: internal server error
        type: string
    type: object
  dto.ResponseDTO:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.ServiceDTO'
        type: array
    type: object
  dto.ResponseTotalDTO:
    properties:
      total_price:
        example: 1000
        type: integer
    type: object
  dto.ServiceDTO:
    properties:
      created_at:
        example: "2025-07-20T10:00:00Z"
        type: string
      end_date:
        example: "2025-10-25T00:00:00Z"
        type: string
      id:
        example: a1b2c3d4
        type: string
      price:
        example: 999
        type: integer
      service_name:
        example: Yandex_plus
        type: string
      start_date:
        example: "2025-07-25T00:00:00Z"
        type: string
      user_id:
        example: user-123
        type: string
    type: object
  dto.TotalRequestDTO:
    properties:
      from:
        description: Начальная дата диапазона (в формате YYYY-MM-DD)
        example: "2025-06-01"
        type: string
      id:
        description: Идентификатор пользователя
        example: 8d633c4c-ef75-475a-915a-ec5dd783dce9
        type: string
      service_name:
        description: Название услуги
        example: Yandex_plus
        type: string
      to:
        description: Конечная дата диапазона (в формате YYYY-MM-DD)
        example: "2025-07-31"
        type: string
    type: object
  dto.UpdateDTO:
    properties:
      duration:
        example: 6
        type: integer
      price:
        example: 599
        type: integer
      service_name:
        example: YouTube Premium
        type: string
      start_date:
        example: "2025-08-01"
        type: string
    type: object
  dto.UpdateResponseDTO:
    properties:
      created_at:
        example: "2025-07-23T15:04:05Z"
        type: string
      end_date:
        example: "2026-02-01T00:00:00Z"
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      price:
        example: 599
        type: integer
      service_name:
        example: YouTube Premium
        type: string
      start_date:
        example: "2025-08-01T00:00:00Z"
        type: string
      user_id:
        example: user_001
        type: string
    type: object
  subscription.ErrDTO:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  subscription.ErrDTOArr:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
info:
  contact: {}
  description: Сервис агрегации данных
  title: Aggregation Service API
  version: "1.0"
paths:
  /api/v1/subscriptions:
    get:
      description: Возвращает список всех подписок с пагинацией
      parameters:
      - description: Ограничение количества результатов
        in: query
        name: limit
        type: integer
      - description: Смещение для пагинации
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseDTO'
        "400":
          description: Некорректные limit или offset
          schema:
            $ref: '#/definitions/subscription.ErrDTO'
        "404":
          description: Подписки не найдены
          schema:
            $ref: '#/definitions/subscription.ErrDTOArr'
        "500":
          description: Внутренняя ошибка
          schema:
            $ref: '#/definitions/subscription.ErrDTO'
      tags:
      - Subscribtions
    post:
      consumes:
      - application/json
      description: Создает подписку пользователю с начальной датой и длительностью
      parameters:
      - description: Параметры подписки
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrDTO400'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrDTO500'
      tags:
      - Subscribtions
  /api/v1/subscriptions/{id}:
    delete:
      description: Удаляет подписку по ID
      parameters:
      - description: ID подписки
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Подписка успешно удалена
        "404":
          description: Подписка не найдена
          schema:
            $ref: '#/definitions/dto.ErrDTO404'
        "500":
          description: Внутренняя ошибка
          schema:
            $ref: '#/definitions/dto.ErrDTO500'
      tags:
      - Subscribtions
    get:
      description: Возвращает подписку по её идентификатору
      parameters:
      - description: ID подписки
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ServiceDTO'
        "400":
          description: ID не передан
          schema:
            $ref: '#/definitions/dto.ErrDTO400'
        "404":
          description: Подписка не найдена
          schema:
            $ref: '#/definitions/dto.ErrDTO404'
        "500":
          description: Внутренняя ошибка
          schema:
            $ref: '#/definitions/dto.ErrDTO500'
      tags:
      - Subscribtions
  /subscriptions/{id}:
    patch:
      consumes:
      - application/json
      description: Позволяет обновить один или несколько параметров подписки (название,
        цену, дату начала, длительность).
      parameters:
      - description: ID услуги
        in: path
        name: id
        required: true
        type: string
      - description: Обновляемые поля
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrDTO400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrDTO404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrDTO500'
      tags:
      - Subscribtions
    put:
      consumes:
      - application/json
      description: Полностью заменяет подписку по ID. Все поля обязательны для передачи.
      parameters:
      - description: ID услуги
        in: path
        name: id
        required: true
        type: string
      - description: Полные данные новой подписки
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrDTO400'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrDTO500'
      tags:
      - Subscribtions
  /subscriptions/total/{id}:
    post:
      consumes:
      - application/json
      description: Возвращает общую сумму подписок по пользователю и необязательное
        название услуги в указанном диапазоне дат
      parameters:
      - description: Total price request
        in: body
        name: totalPriceRequest
        required: true
        schema:
          $ref: '#/definitions/dto.TotalRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseTotalDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrDTO400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrDTO404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrDTO500'
      tags:
      - Subscribtions
swagger: "2.0"
